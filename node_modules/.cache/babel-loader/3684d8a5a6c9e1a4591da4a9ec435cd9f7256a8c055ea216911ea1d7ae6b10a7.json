{"ast":null,"code":"// FormValidation.js\nexport const emailMask=[{regexp:/^[\\w\\-_.]+$/,placeholder:'jane.smith'},{fixed:'@'},{regexp:/^[\\w]+$/,placeholder:'hpe'},{fixed:'.'},{regexp:/^[\\w]+$/,placeholder:'com'}];export const phoneMask=[{fixed:'('},{length:3,regexp:/^[0-9]{1,3}$/,placeholder:'XXX'},{fixed:')'},{fixed:' '},{length:3,regexp:/^[0-9]{1,3}$/,placeholder:'XXX'},{fixed:'-'},{length:4,regexp:/^[0-9]{1,4}$/,placeholder:'XXXX'}];export const emailValidation=[{regexp:new RegExp('[^@ \\\\t\\\\r\\\\n]+@'),message:'Enter a valid email address.',status:'error'},{regexp:new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),message:'Enter a valid email address.',status:'error'},{regexp:new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),message:'Enter a valid email address.',status:'error'},{regexp:new RegExp('[^@]+(@hpe.com|@softcat.com)$'),message:'Email address must end with @hpe.com or @softcat.com',status:'error'}];export const passwordRequirements=[{regexp:new RegExp('(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[#?!@$ %^&*-]).{8,}'),message:'Password requirements not met.',status:'error'}];export const passwordRulesStrong=[{regexp:new RegExp('(?=.*?[A-Z])'),message:'One uppercase letter',status:'error'},{regexp:new RegExp('(?=.*?[a-z])'),message:'One lowercase letter',status:'error'},{regexp:new RegExp('(?=.*?[#?!@$ %^&*-])'),message:'One special character',status:'error'},{regexp:new RegExp('.{8,}'),message:'At least 8 characters',status:'error'}];export const states=['AK','AL','AR','AZ','CA','CO','CT','DC','DE','FL','GA','HI','IA','ID','IL','IN','KS','KY','LA','MA','ME','MD','MN','MO','MS','MT','NC','ND','NE','NH','NJ','NM','NY','NV','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VA','VT','WA','WI','WV','WY'];","map":{"version":3,"names":["emailMask","regexp","placeholder","fixed","phoneMask","length","emailValidation","RegExp","message","status","passwordRequirements","passwordRulesStrong","states"],"sources":["/Users/kyle/projects/personal/hpe-react-practice/src/components/Form/FormValidation.js"],"sourcesContent":["// FormValidation.js\nexport const emailMask = [\n    {\n      regexp: /^[\\w\\-_.]+$/,\n      placeholder: 'jane.smith',\n    },\n    { fixed: '@' },\n    {\n      regexp: /^[\\w]+$/,\n      placeholder: 'hpe',\n    },\n    { fixed: '.' },\n    {\n      regexp: /^[\\w]+$/,\n      placeholder: 'com',\n    },\n  ];\n  \n  export const phoneMask = [\n    { fixed: '(' },\n    {\n      length: 3,\n      regexp: /^[0-9]{1,3}$/,\n      placeholder: 'XXX',\n    },\n    { fixed: ')' },\n    { fixed: ' ' },\n    {\n      length: 3,\n      regexp: /^[0-9]{1,3}$/,\n      placeholder: 'XXX',\n    },\n    { fixed: '-' },\n    {\n      length: 4,\n      regexp: /^[0-9]{1,4}$/,\n      placeholder: 'XXXX',\n    },\n  ];\n  \n  export const emailValidation = [\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('[^@]+(@hpe.com|@softcat.com)$'),\n      message: 'Email address must end with @hpe.com or @softcat.com',\n      status: 'error',\n    },\n  ];\n  \n  export const passwordRequirements = [\n    {\n      regexp: new RegExp('(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[#?!@$ %^&*-]).{8,}'),\n      message: 'Password requirements not met.',\n      status: 'error',\n    },\n  ];\n  \n  export const passwordRulesStrong = [\n    {\n      regexp: new RegExp('(?=.*?[A-Z])'),\n      message: 'One uppercase letter',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('(?=.*?[a-z])'),\n      message: 'One lowercase letter',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('(?=.*?[#?!@$ %^&*-])'),\n      message: 'One special character',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('.{8,}'),\n      message: 'At least 8 characters',\n      status: 'error',\n    },\n  ];\n  \n  export const states = [\n    'AK',\n    'AL',\n    'AR',\n    'AZ',\n    'CA',\n    'CO',\n    'CT',\n    'DC',\n    'DE',\n    'FL',\n    'GA',\n    'HI',\n    'IA',\n    'ID',\n    'IL',\n    'IN',\n    'KS',\n    'KY',\n    'LA',\n    'MA',\n    'ME',\n    'MD',\n    'MN',\n    'MO',\n    'MS',\n    'MT',\n    'NC',\n    'ND',\n    'NE',\n    'NH',\n    'NJ',\n    'NM',\n    'NY',\n    'NV',\n    'OH',\n    'OK',\n    'OR',\n    'PA',\n    'RI',\n    'SC',\n    'SD',\n    'TN',\n    'TX',\n    'UT',\n    'VA',\n    'VT',\n    'WA',\n    'WI',\n    'WV',\n    'WY',\n  ];\n  "],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,SAAS,CAAG,CACrB,CACEC,MAAM,CAAE,aAAa,CACrBC,WAAW,CAAE,YACf,CAAC,CACD,CAAEC,KAAK,CAAE,GAAI,CAAC,CACd,CACEF,MAAM,CAAE,SAAS,CACjBC,WAAW,CAAE,KACf,CAAC,CACD,CAAEC,KAAK,CAAE,GAAI,CAAC,CACd,CACEF,MAAM,CAAE,SAAS,CACjBC,WAAW,CAAE,KACf,CAAC,CACF,CAED,MAAO,MAAM,CAAAE,SAAS,CAAG,CACvB,CAAED,KAAK,CAAE,GAAI,CAAC,CACd,CACEE,MAAM,CAAE,CAAC,CACTJ,MAAM,CAAE,cAAc,CACtBC,WAAW,CAAE,KACf,CAAC,CACD,CAAEC,KAAK,CAAE,GAAI,CAAC,CACd,CAAEA,KAAK,CAAE,GAAI,CAAC,CACd,CACEE,MAAM,CAAE,CAAC,CACTJ,MAAM,CAAE,cAAc,CACtBC,WAAW,CAAE,KACf,CAAC,CACD,CAAEC,KAAK,CAAE,GAAI,CAAC,CACd,CACEE,MAAM,CAAE,CAAC,CACTJ,MAAM,CAAE,cAAc,CACtBC,WAAW,CAAE,MACf,CAAC,CACF,CAED,MAAO,MAAM,CAAAI,eAAe,CAAG,CAC7B,CACEL,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,kBAAkB,CAAC,CACtCC,OAAO,CAAE,8BAA8B,CACvCC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,mDAAmD,CAAC,CACvEC,OAAO,CAAE,8BAA8B,CACvCC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,mDAAmD,CAAC,CACvEC,OAAO,CAAE,8BAA8B,CACvCC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,+BAA+B,CAAC,CACnDC,OAAO,CAAE,sDAAsD,CAC/DC,MAAM,CAAE,OACV,CAAC,CACF,CAED,MAAO,MAAM,CAAAC,oBAAoB,CAAG,CAClC,CACET,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,mDAAmD,CAAC,CACvEC,OAAO,CAAE,gCAAgC,CACzCC,MAAM,CAAE,OACV,CAAC,CACF,CAED,MAAO,MAAM,CAAAE,mBAAmB,CAAG,CACjC,CACEV,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,cAAc,CAAC,CAClCC,OAAO,CAAE,sBAAsB,CAC/BC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,cAAc,CAAC,CAClCC,OAAO,CAAE,sBAAsB,CAC/BC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,sBAAsB,CAAC,CAC1CC,OAAO,CAAE,uBAAuB,CAChCC,MAAM,CAAE,OACV,CAAC,CACD,CACER,MAAM,CAAE,GAAI,CAAAM,MAAM,CAAC,OAAO,CAAC,CAC3BC,OAAO,CAAE,uBAAuB,CAChCC,MAAM,CAAE,OACV,CAAC,CACF,CAED,MAAO,MAAM,CAAAG,MAAM,CAAG,CACp},"metadata":{},"sourceType":"module","externalDependencies":[]}