{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/projects/personal/hpe-react-practice/src/components/Dashboard/DashboardGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Grid, ResponsiveContext } from 'grommet';\nimport { data } from '../Data/data';\nimport { DashboardCard } from './DashboardCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardGrid = ({\n  ...rest\n}) => {\n  _s();\n  const size = useContext(ResponsiveContext);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: !['xsmall', 'small'].includes(size) ? 'medium' : '100%',\n    rows: [['auto', 'full']],\n    gap: \"medium\",\n    fill: true,\n    ...rest,\n    children: data && data.map((datum, index) => /*#__PURE__*/_jsxDEV(DashboardCard, {\n      card: datum\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardGrid, \"/KBwov+JmSCTHSSC6VXWAf4OqjQ=\");\n_c = DashboardGrid;\nvar _c;\n$RefreshReg$(_c, \"DashboardGrid\");","map":{"version":3,"names":["React","useContext","Grid","ResponsiveContext","data","DashboardCard","jsxDEV","_jsxDEV","DashboardGrid","rest","_s","size","columns","includes","rows","gap","fill","children","map","datum","index","card","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kyle/projects/personal/hpe-react-practice/src/components/Dashboard/DashboardGrid.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Grid, ResponsiveContext } from 'grommet';\nimport { data } from '../Data/data';\nimport { DashboardCard } from './DashboardCard'\n\nexport const DashboardGrid = ({ ...rest }) => {\n  const size = useContext(ResponsiveContext);\n  return (\n    <Grid\n      columns={!['xsmall', 'small'].includes(size) ? 'medium' : '100%'}\n      rows={[['auto', 'full']]}\n      gap=\"medium\"\n      fill\n      {...rest}\n    >\n      {data &&\n        data.map((datum, index) => <DashboardCard key={index} card={datum} />)}\n    </Grid>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,IAAI,EAAEC,iBAAiB,QAAQ,SAAS;AACjD,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,aAAa,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,IAAI,GAAGV,UAAU,CAACE,iBAAiB,CAAC;EAC1C,oBACEI,OAAA,CAACL,IAAI;IACHU,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAACC,QAAQ,CAACF,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAO;IACjEG,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAE;IACzBC,GAAG,EAAC,QAAQ;IACZC,IAAI;IAAA,GACAP,IAAI;IAAAQ,QAAA,EAEPb,IAAI,IACHA,IAAI,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAAKb,OAAA,CAACF,aAAa;MAAagB,IAAI,EAAEF;IAAM,GAAnBC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX,CAAC;AAACf,EAAA,CAdWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}