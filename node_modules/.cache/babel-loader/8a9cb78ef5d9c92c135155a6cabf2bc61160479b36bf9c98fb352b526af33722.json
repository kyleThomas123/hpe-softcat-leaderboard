{"ast":null,"code":"// FormValidation.js\nexport const emailMask = [{\n  regexp: /^[\\w\\-_.]+$/,\n  placeholder: 'jane.smith'\n}, {\n  fixed: '@'\n}, {\n  regexp: /^[\\w]+$/,\n  placeholder: 'hpe'\n}, {\n  fixed: '.'\n}, {\n  regexp: /^[\\w]+$/,\n  placeholder: 'com'\n}];\nexport const phoneMask = [{\n  fixed: '('\n}, {\n  length: 3,\n  regexp: /^[0-9]{1,3}$/,\n  placeholder: 'XXX'\n}, {\n  fixed: ')'\n}, {\n  fixed: ' '\n}, {\n  length: 3,\n  regexp: /^[0-9]{1,3}$/,\n  placeholder: 'XXX'\n}, {\n  fixed: '-'\n}, {\n  length: 4,\n  regexp: /^[0-9]{1,4}$/,\n  placeholder: 'XXXX'\n}];\nexport const emailValidation = [{\n  regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@'),\n  message: 'Enter a valid email address.',\n  status: 'error'\n}, {\n  regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n  message: 'Enter a valid email address.',\n  status: 'error'\n}, {\n  regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n  message: 'Enter a valid email address.',\n  status: 'error'\n}, {\n  regexp: new RegExp('/@[^@\\s]+(.hpe.com|\\.softcat\\.com)$'),\n  message: 'Email address must end with @hpe.com or @softcat.com',\n  status: 'error'\n}];\nexport const passwordRequirements = [{\n  regexp: new RegExp('(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[#?!@$ %^&*-]).{8,}'),\n  message: 'Password requirements not met.',\n  status: 'error'\n}];\nexport const passwordRulesStrong = [{\n  regexp: new RegExp('(?=.*?[A-Z])'),\n  message: 'One uppercase letter',\n  status: 'error'\n}, {\n  regexp: new RegExp('(?=.*?[a-z])'),\n  message: 'One lowercase letter',\n  status: 'error'\n}, {\n  regexp: new RegExp('(?=.*?[#?!@$ %^&*-])'),\n  message: 'One special character',\n  status: 'error'\n}, {\n  regexp: new RegExp('.{8,}'),\n  message: 'At least 8 characters',\n  status: 'error'\n}];\nexport const states = ['AK', 'AL', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA', 'HI', 'IA', 'ID', 'IL', 'IN', 'KS', 'KY', 'LA', 'MA', 'ME', 'MD', 'MN', 'MO', 'MS', 'MT', 'NC', 'ND', 'NE', 'NH', 'NJ', 'NM', 'NY', 'NV', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VA', 'VT', 'WA', 'WI', 'WV', 'WY'];","map":{"version":3,"names":["emailMask","regexp","placeholder","fixed","phoneMask","length","emailValidation","RegExp","message","status","passwordRequirements","passwordRulesStrong","states"],"sources":["/Users/kyle/projects/personal/hpe-react-practice/src/components/Form/FormValidation.js"],"sourcesContent":["// FormValidation.js\nexport const emailMask = [\n    {\n      regexp: /^[\\w\\-_.]+$/,\n      placeholder: 'jane.smith',\n    },\n    { fixed: '@' },\n    {\n      regexp: /^[\\w]+$/,\n      placeholder: 'hpe',\n    },\n    { fixed: '.' },\n    {\n      regexp: /^[\\w]+$/,\n      placeholder: 'com',\n    },\n  ];\n  \n  export const phoneMask = [\n    { fixed: '(' },\n    {\n      length: 3,\n      regexp: /^[0-9]{1,3}$/,\n      placeholder: 'XXX',\n    },\n    { fixed: ')' },\n    { fixed: ' ' },\n    {\n      length: 3,\n      regexp: /^[0-9]{1,3}$/,\n      placeholder: 'XXX',\n    },\n    { fixed: '-' },\n    {\n      length: 4,\n      regexp: /^[0-9]{1,4}$/,\n      placeholder: 'XXXX',\n    },\n  ];\n  \n  export const emailValidation = [\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('[^@ \\\\t\\\\r\\\\n]+@[^@ \\\\t\\\\r\\\\n]+\\\\.[^@ \\\\t\\\\r\\\\n]+'),\n      message: 'Enter a valid email address.',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('/@[^@\\s]+(.hpe.com|\\.softcat\\.com)$'),\n      message: 'Email address must end with @hpe.com or @softcat.com',\n      status: 'error',\n    },\n  ];\n  \n  export const passwordRequirements = [\n    {\n      regexp: new RegExp('(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[#?!@$ %^&*-]).{8,}'),\n      message: 'Password requirements not met.',\n      status: 'error',\n    },\n  ];\n  \n  export const passwordRulesStrong = [\n    {\n      regexp: new RegExp('(?=.*?[A-Z])'),\n      message: 'One uppercase letter',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('(?=.*?[a-z])'),\n      message: 'One lowercase letter',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('(?=.*?[#?!@$ %^&*-])'),\n      message: 'One special character',\n      status: 'error',\n    },\n    {\n      regexp: new RegExp('.{8,}'),\n      message: 'At least 8 characters',\n      status: 'error',\n    },\n  ];\n  \n  export const states = [\n    'AK',\n    'AL',\n    'AR',\n    'AZ',\n    'CA',\n    'CO',\n    'CT',\n    'DC',\n    'DE',\n    'FL',\n    'GA',\n    'HI',\n    'IA',\n    'ID',\n    'IL',\n    'IN',\n    'KS',\n    'KY',\n    'LA',\n    'MA',\n    'ME',\n    'MD',\n    'MN',\n    'MO',\n    'MS',\n    'MT',\n    'NC',\n    'ND',\n    'NE',\n    'NH',\n    'NJ',\n    'NM',\n    'NY',\n    'NV',\n    'OH',\n    'OK',\n    'OR',\n    'PA',\n    'RI',\n    'SC',\n    'SD',\n    'TN',\n    'TX',\n    'UT',\n    'VA',\n    'VT',\n    'WA',\n    'WI',\n    'WV',\n    'WY',\n  ];\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAG,CACrB;EACEC,MAAM,EAAE,aAAa;EACrBC,WAAW,EAAE;AACf,CAAC,EACD;EAAEC,KAAK,EAAE;AAAI,CAAC,EACd;EACEF,MAAM,EAAE,SAAS;EACjBC,WAAW,EAAE;AACf,CAAC,EACD;EAAEC,KAAK,EAAE;AAAI,CAAC,EACd;EACEF,MAAM,EAAE,SAAS;EACjBC,WAAW,EAAE;AACf,CAAC,CACF;AAED,OAAO,MAAME,SAAS,GAAG,CACvB;EAAED,KAAK,EAAE;AAAI,CAAC,EACd;EACEE,MAAM,EAAE,CAAC;EACTJ,MAAM,EAAE,cAAc;EACtBC,WAAW,EAAE;AACf,CAAC,EACD;EAAEC,KAAK,EAAE;AAAI,CAAC,EACd;EAAEA,KAAK,EAAE;AAAI,CAAC,EACd;EACEE,MAAM,EAAE,CAAC;EACTJ,MAAM,EAAE,cAAc;EACtBC,WAAW,EAAE;AACf,CAAC,EACD;EAAEC,KAAK,EAAE;AAAI,CAAC,EACd;EACEE,MAAM,EAAE,CAAC;EACTJ,MAAM,EAAE,cAAc;EACtBC,WAAW,EAAE;AACf,CAAC,CACF;AAED,OAAO,MAAMI,eAAe,GAAG,CAC7B;EACEL,MAAM,EAAE,IAAIM,MAAM,CAAC,kBAAkB,CAAC;EACtCC,OAAO,EAAE,8BAA8B;EACvCC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,mDAAmD,CAAC;EACvEC,OAAO,EAAE,8BAA8B;EACvCC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,mDAAmD,CAAC;EACvEC,OAAO,EAAE,8BAA8B;EACvCC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,qCAAqC,CAAC;EACzDC,OAAO,EAAE,sDAAsD;EAC/DC,MAAM,EAAE;AACV,CAAC,CACF;AAED,OAAO,MAAMC,oBAAoB,GAAG,CAClC;EACET,MAAM,EAAE,IAAIM,MAAM,CAAC,mDAAmD,CAAC;EACvEC,OAAO,EAAE,gCAAgC;EACzCC,MAAM,EAAE;AACV,CAAC,CACF;AAED,OAAO,MAAME,mBAAmB,GAAG,CACjC;EACEV,MAAM,EAAE,IAAIM,MAAM,CAAC,cAAc,CAAC;EAClCC,OAAO,EAAE,sBAAsB;EAC/BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,cAAc,CAAC;EAClCC,OAAO,EAAE,sBAAsB;EAC/BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,sBAAsB,CAAC;EAC1CC,OAAO,EAAE,uBAAuB;EAChCC,MAAM,EAAE;AACV,CAAC,EACD;EACER,MAAM,EAAE,IAAIM,MAAM,CAAC,OAAO,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAChCC,MAAM,EAAE;AACV,CAAC,CACF;AAED,OAAO,MAAMG,MAAM,GAAG,CACp},"metadata":{},"sourceType":"module","externalDependencies":[]}