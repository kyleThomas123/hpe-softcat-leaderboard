{"ast":null,"code":"import React from'react';import{Button,Card,CardBody,Heading,Text}from'grommet';import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const DashboardCard=_ref=>{let{card,...rest}=_ref;const{background,cta,description,descriptionColor,icon,title}=card;return/*#__PURE__*/_jsx(Card,{background:background||'background',fill:true,...rest,children:/*#__PURE__*/_jsxs(CardBody,{gap:\"small\",align:\"start\",flex:\"grow\",children:[icon,/*#__PURE__*/_jsx(Heading,{margin:\"none\",level:2,children:title}),/*#__PURE__*/_jsx(Text,{color:descriptionColor,children:description}),typeof cta==='string'?/*#__PURE__*/_jsx(Link,{to:\"/leaderboard\",children:/*#__PURE__*/_jsx(Button,{label:cta,secondary:true})}):cta]})});};","map":{"version":3,"names":["React","Button","Card","CardBody","Heading","Text","Link","jsx","_jsx","jsxs","_jsxs","DashboardCard","_ref","card","rest","background","cta","description","descriptionColor","icon","title","fill","children","gap","align","flex","margin","level","color","to","label","secondary"],"sources":["/Users/kyle/projects/personal/hpe-react-practice/src/components/Dashboard/DashboardCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, Heading, Text } from 'grommet';\nimport { Link } from \"react-router-dom\";\n\n\nexport const DashboardCard = ({ card, ...rest }) => {\n  const { background, cta, description, descriptionColor, icon, title } = card;\n  return (\n    <Card background={background || 'background'} fill {...rest}>\n      <CardBody gap=\"small\" align=\"start\" flex=\"grow\">\n        {icon}\n        <Heading margin=\"none\" level={2}>\n          {title}\n        </Heading>\n        <Text color={descriptionColor}>{description}</Text>\n        {typeof cta === 'string' ? <Link to=\"/leaderboard\"><Button label={cta} secondary /></Link> : cta}\n      </CardBody>\n    </Card>\n  );\n};\n\nDashboardCard.propTypes = {\n  card: PropTypes.shape({\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n    cta: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    description: PropTypes.string,\n    descriptionColor: PropTypes.string,\n    icon: PropTypes.element,\n    title: PropTypes.string,\n  }).isRequired,\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,MAAM,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,IAAI,KAAQ,SAAS,CAC/D,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGxC,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,IAAI,CAAE,GAAGC,IAAK,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAAEG,UAAU,CAAEC,GAAG,CAAEC,WAAW,CAAEC,gBAAgB,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGP,IAAI,CAC5E,mBACEL,IAAA,CAACN,IAAI,EAACa,UAAU,CAAEA,UAAU,EAAI,YAAa,CAACM,IAAI,SAAKP,IAAI,CAAAQ,QAAA,cACzDZ,KAAA,CAACP,QAAQ,EAACoB,GAAG,CAAC,OAAO,CAACC,KAAK,CAAC,OAAO,CAACC,IAAI,CAAC,MAAM,CAAAH,QAAA,EAC5CH,IAAI,cACLX,IAAA,CAACJ,OAAO,EAACsB,MAAM,CAAC,MAAM,CAACC,KAAK,CAAE,CAAE,CAAAL,QAAA,CAC7BF,KAAK,CACC,CAAC,cACVZ,IAAA,CAACH,IAAI,EAACuB,KAAK,CAAEV,gBAAiB,CAAAI,QAAA,CAAEL,WAAW,CAAO,CAAC,CAClD,MAAO,CAAAD,GAAG,GAAK,QAAQ,cAAGR,IAAA,CAACF,IAAI,EAACuB,EAAE,CAAC,cAAc,CAAAP,QAAA,cAACd,IAAA,CAACP,MAAM,EAAC6B,KAAK,CAAEd,GAAI,CAACe,SAAS,MAAE,CAAC,CAAM,CAAC,CAAGf,GAAG,EACxF,CAAC,CACP,CAAC,CAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}