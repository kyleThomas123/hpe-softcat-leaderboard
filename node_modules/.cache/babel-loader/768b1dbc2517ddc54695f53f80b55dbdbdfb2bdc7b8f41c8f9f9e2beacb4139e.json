{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/projects/personal/hpe-react-practice/src/components/Dashboard/DashboardCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, Heading, Text } from 'grommet';\nimport { Outlet, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardCard = ({\n  card,\n  ...rest\n}) => {\n  const {\n    background,\n    cta,\n    description,\n    descriptionColor,\n    icon,\n    title\n  } = card;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    background: background || 'background',\n    fill: true,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      gap: \"small\",\n      align: \"start\",\n      flex: \"grow\",\n      children: [icon, /*#__PURE__*/_jsxDEV(Heading, {\n        margin: \"none\",\n        level: 2,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: descriptionColor,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), typeof cta === 'string' ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"LeaderBoard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: cta,\n          secondary: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 36\n      }, this) : cta]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardCard;\nDashboardCard.propTypes = {\n  card: PropTypes.shape({\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n    cta: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    description: PropTypes.string,\n    descriptionColor: PropTypes.string,\n    icon: PropTypes.element,\n    title: PropTypes.string\n  }).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"DashboardCard\");","map":{"version":3,"names":["React","PropTypes","Button","Card","CardBody","Heading","Text","Outlet","Link","jsxDEV","_jsxDEV","DashboardCard","card","rest","background","cta","description","descriptionColor","icon","title","fill","children","gap","align","flex","margin","level","fileName","_jsxFileName","lineNumber","columnNumber","color","to","label","secondary","_c","propTypes","shape","oneOfType","string","element","isRequired","$RefreshReg$"],"sources":["/Users/kyle/projects/personal/hpe-react-practice/src/components/Dashboard/DashboardCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, Heading, Text } from 'grommet';\nimport { Outlet, Link } from \"react-router-dom\";\n\n\nexport const DashboardCard = ({ card, ...rest }) => {\n  const { background, cta, description, descriptionColor, icon, title } = card;\n  return (\n    <Card background={background || 'background'} fill {...rest}>\n      <CardBody gap=\"small\" align=\"start\" flex=\"grow\">\n        {icon}\n        <Heading margin=\"none\" level={2}>\n          {title}\n        </Heading>\n        <Text color={descriptionColor}>{description}</Text>\n        {typeof cta === 'string' ? <Link to=\"LeaderBoard\"><Button label={cta} secondary /></Link> : cta}\n      </CardBody>\n    </Card>\n  );\n};\n\nDashboardCard.propTypes = {\n  card: PropTypes.shape({\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n    cta: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    description: PropTypes.string,\n    descriptionColor: PropTypes.string,\n    icon: PropTypes.element,\n    title: PropTypes.string,\n  }).isRequired,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,QAAQ,SAAS;AAC/D,SAASC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAE,GAAGC;AAAK,CAAC,KAAK;EAClD,MAAM;IAAEC,UAAU;IAAEC,GAAG;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGP,IAAI;EAC5E,oBACEF,OAAA,CAACP,IAAI;IAACW,UAAU,EAAEA,UAAU,IAAI,YAAa;IAACM,IAAI;IAAA,GAAKP,IAAI;IAAAQ,QAAA,eACzDX,OAAA,CAACN,QAAQ;MAACkB,GAAG,EAAC,OAAO;MAACC,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC,MAAM;MAAAH,QAAA,GAC5CH,IAAI,eACLR,OAAA,CAACL,OAAO;QAACoB,MAAM,EAAC,MAAM;QAACC,KAAK,EAAE,CAAE;QAAAL,QAAA,EAC7BF;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACVpB,OAAA,CAACJ,IAAI;QAACyB,KAAK,EAAEd,gBAAiB;QAAAI,QAAA,EAAEL;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAClD,OAAOf,GAAG,KAAK,QAAQ,gBAAGL,OAAA,CAACF,IAAI;QAACwB,EAAE,EAAC,aAAa;QAAAX,QAAA,eAACX,OAAA,CAACR,MAAM;UAAC+B,KAAK,EAAElB,GAAI;UAACmB,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAGf,GAAG;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEX,CAAC;AAACK,EAAA,GAdWxB,aAAa;AAgB1BA,aAAa,CAACyB,SAAS,GAAG;EACxBxB,IAAI,EAAEX,SAAS,CAACoC,KAAK,CAAC;IACpBvB,UAAU,EAAEb,SAAS,CAACqC,SAAS,CAAC,CAACrC,SAAS,CAACsC,MAAM,EAAEtC,SAAS,CAACoC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxEtB,GAAG,EAAEd,SAAS,CAACqC,SAAS,CAAC,CAACrC,SAAS,CAACsC,MAAM,EAAEtC,SAAS,CAACuC,OAAO,CAAC,CAAC;IAC/DxB,WAAW,EAAEf,SAAS,CAACsC,MAAM;IAC7BtB,gBAAgB,EAAEhB,SAAS,CAACsC,MAAM;IAClCrB,IAAI,EAAEjB,SAAS,CAACuC,OAAO;IACvBrB,KAAK,EAAElB,SAAS,CAACsC;EACnB,CAAC,CAAC,CAACE;AACL,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}